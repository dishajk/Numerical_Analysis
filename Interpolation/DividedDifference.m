%Interpolation%Newton Divided Differenceclc;clear all;format long;printf("Newton Divided Difference\n");%load nodes.txt %to load (x_i,y_i) from a txt file. Comment if not being used.%x=nodes;x=input("Enter the nodes \n(like, [a,b,c,d] where a,b,c,d are nodes):\n "); % To approximate the function f(x) in an interval. Comment if not being used.n=length(x); %y=x(1:n,2); %For nodes from a text filesy=f(x'); %For approximating a functiondd(1:n,1)=x';dd(1:n,2)=y;for j=1:n-1;  for i=1:n-j;    dd(i,j+2)=(dd(i+1,j+1)-dd(i,j+1))/(dd(i+j,1)-dd(i,1));  endforendforddp=[dd(1,n+1)];for k=n-1:-1:1;  d(1,1:n-k)=0;  d(1,n-k+1)=dd(1,k+1);  p=conv(p,[1,-dd(k,1)])+dendforpolyout(p,'t')